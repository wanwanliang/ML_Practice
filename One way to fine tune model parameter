r2_df = pd.DataFrame()
paras= [0.01, 0.05, 0.1, 0.2, 0.3,0.4, 0.5]
for n in paras:
    
    rs = []
    for i in range(20):
        X_train, X_test, y_train, y_test = train_test_split(dt_x, dt_y, test_size=0.2, random_state=i*600+23)
        #gbr = GradientBoostingRegressor(learning_rate=0.1, n_estimators=100, min_samples_leaf=n)
        #gbr.fit(X_train, y_train)
        #rf = RandomForestRegressor(n_estimators= 300,  max_depth=10, min_samples_leaf=n)
        rf = Lasso(alpha= n)
        rf.fit(X_train, y_train)
    
       # rf = RandomForestRegressor(n_estimators=400,  min_samples_leaf=n)
        #rf.fit(X_train, y_train)

        y_pred_train_gbr = rf.predict(X_train)
        y_pred_test_gbr = rf.predict(X_test)
        pred_gbr = rf.predict(dt_x)
        r2_test_gbr = r2_score(y_test.values.ravel(), y_pred_test_gbr)
        rs.append(r2_test_gbr)
    rs = pd.DataFrame(rs)
    r2_df = pd.concat([r2_df, rs], axis=1)
    
r2_df.columns = paras
r2_df.describe().round(3)
